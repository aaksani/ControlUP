name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Create .env file
      run: |
        echo "SAUCEDEMO_BASE_URL=${{ secrets.SAUCEDEMO_BASE_URL || 'https://www.saucedemo.com' }}" >> .env
        echo "SAUCEDEMO_USERNAME=${{ secrets.SAUCEDEMO_USERNAME || 'standard_user' }}" >> .env
        echo "SAUCEDEMO_PASSWORD=${{ secrets.SAUCEDEMO_PASSWORD || 'secret_sauce' }}" >> .env
        echo "AIRPORTGAP_BASE_URL=${{ secrets.AIRPORTGAP_BASE_URL || 'https://airportgap.com/api' }}" >> .env
    
    - name: Run tests
      run: npm test
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type check
      run: npx tsc --noEmit
    
    - name: Check for unused dependencies
      run: |
        npm install -g depcheck
        depcheck --skip-missing --ignores="typescript,@types/*"
    
    - name: Security audit
      run: npm audit --audit-level=moderate

  ai-review:
    name: AI Code Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: AI Code Review
      uses: coderabbitai/coderabbit-action@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        exclude: |
          **/*.md
          package-lock.json
          .env*