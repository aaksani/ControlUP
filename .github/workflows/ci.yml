name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Create .env file
      run: |
        echo "SAUCEDEMO_BASE_URL=${{ secrets.SAUCEDEMO_BASE_URL || 'https://www.saucedemo.com' }}" >> .env
        echo "SAUCEDEMO_USERNAME=${{ secrets.SAUCEDEMO_USERNAME || 'standard_user' }}" >> .env
        echo "SAUCEDEMO_PASSWORD=${{ secrets.SAUCEDEMO_PASSWORD || 'secret_sauce' }}" >> .env
        echo "AIRPORTGAP_BASE_URL=${{ secrets.AIRPORTGAP_BASE_URL || 'https://airportgap.com/api' }}" >> .env
    
    - name: Run tests
      run: npm test
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30
    
    - name: Publish Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Playwright Tests (Node ${{ matrix.node-version }})
        path: test-results/results.xml
        reporter: java-junit
        fail-on-error: false
    
    - name: Generate Test Summary
      if: always()
      run: |
        echo "## 🎭 Playwright Test Results (Node ${{ matrix.node-version }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "test-results/results.json" ]; then
          # Parse JSON results for summary
          TOTAL=$(jq '.suites | map(.specs | length) | add' test-results/results.json 2>/dev/null || echo "0")
          PASSED=$(jq '[.suites[].specs[].tests[] | select(.status == "passed")] | length' test-results/results.json 2>/dev/null || echo "0")
          FAILED=$(jq '[.suites[].specs[].tests[] | select(.status == "failed")] | length' test-results/results.json 2>/dev/null || echo "0")
          SKIPPED=$(jq '[.suites[].specs[].tests[] | select(.status == "skipped")] | length' test-results/results.json 2>/dev/null || echo "0")
          
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| ✅ Passed | $PASSED |" >> $GITHUB_STEP_SUMMARY
          echo "| ❌ Failed | $FAILED |" >> $GITHUB_STEP_SUMMARY
          echo "| ⏭️ Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
          echo "| 📊 Total | $TOTAL |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$FAILED" -gt "0" ]; then
            echo "❌ **Some tests failed. Check the detailed report for more information.**" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "📋 Test results file not found. Check test execution logs." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Detailed HTML Report**: Check the artifacts section for the complete Playwright HTML report." >> $GITHUB_STEP_SUMMARY

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type check
      run: npx tsc --noEmit
    
    - name: Check for unused dependencies
      run: |
        npm install -g depcheck
        depcheck --skip-missing --ignores="typescript,@types/*"
    
    - name: Security audit
      run: npm audit --audit-level=moderate

  ai-review:
    name: AI Code Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: AI Code Review
      uses: coderabbitai/coderabbit-action@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        exclude: |
          **/*.md
          package-lock.json
          .env*